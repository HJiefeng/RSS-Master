<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <channel>
        <title>有赞技术团队</title>
        <link>https://tech.youzan.com/</link>
        
        <item>
            <id>e097cfe1-4722-4996-968c-9a102a89c5f4</id>
            <title>知识库检索匹配的服务化实践</title>
            <link>https://tech.youzan.com/xiang-liang-hua-wen-ben-pi-pei-jian-suo-de-fu-wu-hua-shi-jian/</link>
            <guid isPermaLink="false">e097cfe1-4722-4996-968c-9a102a89c5f4</guid>
            <pubDate></pubDate>
            <updated>Fri, 28 Oct 2022 07:02:54 GMT</updated>
                
                
            <media:content url="https://tech.youzan.com/content/images/2022/09/image-3.png"/>
                
            <content:encoded>
                <![CDATA[
                    
                    
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>889373e0-ad34-40d9-8822-ec9a7375eaa2</id>
            <title>Spark App 血缘解析方案</title>
            <link>https://tech.youzan.com/spark-app-xie-yuan-jie-xi-fang-an/</link>
            <guid isPermaLink="false">889373e0-ad34-40d9-8822-ec9a7375eaa2</guid>
            <pubDate></pubDate>
            <updated>Fri, 16 Sep 2022 05:03:20 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <h1 id="">一、背景</h1>

<p>随着数据仓库的数据量的增长，数据血缘( Data Lineage or Data Provence ) 对于数据分析来说日益重要， 通过数据血缘可以追溯表-表，表-任务，任务-任务的上下游关系， 用来支撑问题数据溯源，孤岛数据下线的需求。</p>

<p>目前已经基于 ANTLR 语法解析支持了 SQL 任务的血缘解析， 而 Spark App 任务的血缘仍然是通过人工配置方式进行。 我们希望能够将 Spark App 任务的解析做个补充，完善血缘逻辑。</p>

<p>目前线上的 Spark App 任务支持 Spark 2.3、 Spark 3.1 两个版本， 并且支持 python2/3、 java、scala 类型， 运行平台各自支持 yarn 和 k8s,</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>a84e4163-d24f-40c5-9bed-a5099ad15ecb</id>
            <title>浅谈有赞搜索QP架构设计</title>
            <link>https://tech.youzan.com/11/</link>
            <guid isPermaLink="false">a84e4163-d24f-40c5-9bed-a5099ad15ecb</guid>
            <pubDate></pubDate>
            <updated>Mon, 05 Sep 2022 05:27:28 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <h1 id="">一、有赞搜索平台整体设计</h1>

<p>&emsp;&emsp;在介绍QP前先简单介绍一下搜索平台的整体结构，方便大家快速了解QP在搜索平台中的作用。下图简单展示了一个搜索请求开始到结束的全部流程。业务通过简洁的api接入los，管理员在搜索平台新建配置并下发，完成整个搜索接入，并通过abtest验证QP带来的优化效果。   </p>

<p><img alt="image" src="https://tech.youzan.com/content/images/2022/09/1-----.jpeg" /></p>

<h1 id="qp">二、QP的作用</h1>

<p>&emsp;&emsp; 在NLP中，QP被称作Query理解（QueryParser），简单来说就是从词法、句法、语义三个层面对query进行结构化解析。这里query从广义上来说涉及的任务比较多，最常见的就是搜索系统中输入的查询词，也可以是FAQ问答或阅读理解中的问句，又或者可以是人机对话中用户的聊天输入。 <br />
&emsp;&emsp;在有赞，QP系统专注对查询内容进行结构化解析，整合了有赞NLP能力，提供统一对外接口，与业务逻辑解耦。通过配置化快速满足业务接入需求，同时将算法能力插件化，并支持人工干预插件执行结果。 <br />
&emsp;&emsp;以精选搜索为例，当用户输入衣服时用户往往想要搜的是衣服类商品，而不是衣服架，衣服配饰等衣服周边用品。通过将衣服类目进行加权，将衣服类的商品排在靠前的位置，优化用户搜索体验。
<img alt="image" src="https://tech.youzan.com/content/images/2022/09/-----2.jpg" />
&emsp;&emsp;QP目前应用在新零售，微商城、精选、爱逛买手店、</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>9be275b5-680f-4787-a2ad-17f5fd296abc</id>
            <title>对比学习在有赞的应用</title>
            <link>https://tech.youzan.com/dui-bi-xue-xi-zai-you-zan-d/</link>
            <guid isPermaLink="false">9be275b5-680f-4787-a2ad-17f5fd296abc</guid>
            <pubDate></pubDate>
            <updated>Tue, 05 Jul 2022 03:57:00 GMT</updated>
                
                
            <media:content url="https://tech.youzan.com/content/images/2022/07/Snipaste_2022-07-05_15-58-37.png"/>
                
            <content:encoded>
                <![CDATA[
                    
                    
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>f1d5df75-c808-409c-83ca-5b11c9e8775b</id>
            <title>有赞算法平台之模型部署演进</title>
            <link>https://tech.youzan.com/you-zan-suan-fa-ping-tai-zhi-mo-xing-bu-shu-yan-jin/</link>
            <guid isPermaLink="false">f1d5df75-c808-409c-83ca-5b11c9e8775b</guid>
            <pubDate></pubDate>
            <updated>Tue, 21 Jun 2022 03:35:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <h1 id="">一、 前言</h1>

<p>模型部署作为算法工程落地的最后一公里，其天然对算法团队而言具有较高的复杂性，不仅要考虑如何高效地部署、管理不同框架模型，还需要考虑分布式服务的负载均衡、故障容错、可扩展性、资源隔离、限流、核心指标监控等问题。 这些都极大的依赖于工程团队的能力，不是算法团队的强项，如何解决这最后一公里，让焦点聚焦在模型开发上，是模型部署服务模块需要解决的问题。
<img alt="alt" src="https://tech.youzan.com/content/images/2021/12/pic_1-1-2.png" /></p>

<h1 id="">二、 原有架构</h1>

<h2 id="21">2.1 架构设计</h2>

<p>在有赞算法平台Sunfish包含算法训练和模型部署两部分， 模型部署的模块称为ABox（小盒子）。
<img alt="alt" src="https://tech.youzan.com/content/images/2021/12/image-1297.png" /></p>

<p>ABox 主要提供将模型部署为在线服务的功能， 主要包含以下功能： <br />
1. 提供 tensorflow 模型的服务加载和版本管理、弹性部署 <br />
2. 提供 tensorflow 模型和其他模型服务（自己部署在额外服务器上）的路由管理 <br />
3. 提供模型输入和输出的自定义处理逻辑执行 <br />
4. 提供服务主机的负载均衡管理 <br />
5. 收集的 Metric 写入上报到 kafka，通过 druid</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>0e9ee086-6765-4b99-b318-39781e16cd29</id>
            <title>特性团队中的 DoD 右移实践</title>
            <link>https://tech.youzan.com/dod-practise/</link>
            <guid isPermaLink="false">0e9ee086-6765-4b99-b318-39781e16cd29</guid>
            <pubDate></pubDate>
            <updated>Wed, 23 Mar 2022 03:18:52 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <blockquote>
  <p>作者：严梨炯 | 效能改进</p>
</blockquote>

<h1 id="">一、背景</h1>

<p>DoD（全称：Definition of Done）是特性团队内部，针对某个即将进入下一个迭代 backlog 的工作条目（一般指 story），约定其在该迭代结束时须完成到什么程度（比如：完成测试并等待演示，见图1）。尤其是当 story 颗粒度较大（须跨多个迭代）时，用该方式达成该团队共识，显得尤为重要。</p>

<p>众所周知，即便在敏捷模式中，研发过程依然由若干道工序所组成，故 DoD 的设计，完全可以基于工序来划定。笔者在敏捷转型的实践过程中，完成了特性团队从无到有创建 DoD 活动，并推动其逐渐右移，以帮助团队养成「聚焦目标」的习惯。</p>

<p><img alt="" src="https://tech.youzan.com/content/images/2022/01/image01-10.png" /></p>

<p><center style="font-size: 10px;">图1. story 在某个迭代的 DoD</center></p>

<h1 id="">二、问题现状</h1>

<p>既然定义了 DoD，</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>adfb7d8a-9497-4fee-9295-e0737e32a9f8</id>
            <title>如何用「标准差」度量研发波动</title>
            <link>https://tech.youzan.com/metric-standard-deviation/</link>
            <guid isPermaLink="false">adfb7d8a-9497-4fee-9295-e0737e32a9f8</guid>
            <pubDate></pubDate>
            <updated>Fri, 04 Mar 2022 11:46:15 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <blockquote>
  <p>作者：陈煜 | 效能改进</p>
</blockquote>

<h1 id="">一、背景</h1>

<p>技术中心的年度研发效能报告已于前不久发布，在吞吐的分析中，我们新增了一个指标「标准差」（计算公式见图1）。</p>

<p><img alt="" src="https://tech.youzan.com/content/images/2022/01/image01-11.png" /></p>

<p><center style="font-size: 10;">图1. 标准差计算公式</center></p>

<p>标准差在概率统计中最常使用作为统计分布程度上的测量。它反映组内个体间的离散程度。标准差越大，表示大部分数值和其平均值之间差异较大，反之亦然。</p>

<p>上面的公式不用记，Excel 中有对应的计算函数：STDEVP（见图2）。</p>

<p><img alt="" src="https://tech.youzan.com/content/images/2022/01/image02-9.png" /></p>

<p><center style="font-size: 10;">图2. Excel 中的标准差函数</center></p>

<h1 id="">二、指标的产生历程</h1>

<p>常见的数据分析方法包括：趋势分析、指标下钻分析、关联影响分析。而标准差，就是下钻分析维度的产物。我们的目标是提升吞吐量（即：单位周期交付的需求数量），所以重点关注在「吐」的情况。</p>

<p>然而，利特尔法则指出，过高的在制品数量会影响需求的交付周期，进而影响需求交付效率。故在吞吐量的分析中，我们加上了在制品的分析，引入了对「吞」的观察（即：单位周期规划的需求数）</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>9442ba93-8652-475e-b9e6-f46b6e208d26</id>
            <title>一则物理看板的演进实践</title>
            <link>https://tech.youzan.com/evolution-of-real-kanban/</link>
            <guid isPermaLink="false">9442ba93-8652-475e-b9e6-f46b6e208d26</guid>
            <pubDate></pubDate>
            <updated>Thu, 24 Feb 2022 13:17:24 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <blockquote>
  <p>作者：林晔琛 | 效能改进</p>
</blockquote>

<h1 id="">一、背景</h1>

<p>看板（并非特指 Kanban，下同）作为一种目视化管理工具，能够将团队成员的工作过程透明出来，帮助团队更好地发现问题和瓶颈，尤其是在特性团队中，更是会秉承看板的理念，将其与站会形成良好的配合和互动，充分发挥其目视化的作用。</p>

<p>在笔者的工作场景中，特性团队尚处于敏捷转型初期，并未养成良好的工作习惯，其中就包括看板使用不到位的情况，导致了站会活动效果不佳。于是，笔者尝试从「改变看板的使用姿势」切入，唤醒团队的自管理意识，逐步改善团队的敏捷氛围。</p>

<h1 id="">二、物理看板演进</h1>

<h2 id="1scrum">1. Scrum 板：从失焦到聚焦</h2>

<h3 id="">现象</h3>

<p>每日站会是技术负责人发起的，没有固定的聚会场所，而且形式比较随意：团队成员围坐在办公室休息区的沙发上，抑或茶水间的吧台前，每个人端着电脑，在技术负责人的主持下被挨个儿点名，然后大家轮流在自己电脑上更新维护同一份在线表格中所负责的任务条目的状态（石墨、Confluence 之类的），站会过程中的其他时间就处理与会议无关的事务。</p>

<h3 id="">分析</h3>

<ul>
<li>责任失焦。作为技术负责人角色，主持人天然带有权威性，</li></ul>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>25c7b4e4-a478-4204-9a2b-73f252aadff1</id>
            <title>「研发共建」提升中台效能初探</title>
            <link>https://tech.youzan.com/open-source-mode-from-middle-platform/</link>
            <guid isPermaLink="false">25c7b4e4-a478-4204-9a2b-73f252aadff1</guid>
            <pubDate></pubDate>
            <updated>Thu, 17 Feb 2022 08:22:23 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <blockquote>
  <p>作者：徐钰菡 | 效能改进</p>
</blockquote>

<h1 id="">一、背景</h1>

<p>在互联网行业，大部分研发团队都会通过建设中台（有些公司叫平台），来提高系统的可复用性，降低重复功能的研发成本。随着有赞业务的快速发展，我们也逐渐走向了大中台道路，充分享受着中台所带来的红利，但与此同时，我们也陆陆续续遇到了不少问题，笔者希望借助本文，从效能改进的视角进行剖析，期待引发读者对「如何从组织层面协同中台」的思考和共鸣。</p>

<h1 id="">二、发现问题</h1>

<p>有赞大大小小业务共有十几个（下称：业务域），在各业务域（一级）下，又细化出若干业务子域（二级），维护自己的需求优先级列表（backlog）。而中台，也并非以整体在运作，而是根据组件划分为商品、交易、营销等功能模块，各功能模块也有自己的需求优先级列表（中台没有整体的 backlog）。</p>

<h2 id="1">1. 需求规划困难，阻碍业务发展</h2>

<p>尽管业务域内部可以从容响应市场需求的快速变化，但因为功能托管而造成技术依赖，导致与中台的耦合度极高。当业务子域需要在中台通用能力基础上，快速叠加新场景时，就遇到跨团队协作壁垒、多个业务子域需求冲突、</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>c6355838-9e99-49a6-98c8-70518bfa05e0</id>
            <title>逻辑表在OLAP场景下的应用与实现</title>
            <link>https://tech.youzan.com/luo-ji-biao-zai-olapchang-jing-xia-de-ying-yong-yu-shi-xian/</link>
            <guid isPermaLink="false">c6355838-9e99-49a6-98c8-70518bfa05e0</guid>
            <pubDate></pubDate>
            <updated>Wed, 09 Feb 2022 07:16:32 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    大数
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>52bdfcd3-90b0-4416-a78d-5edbfe08a0b2</id>
            <title>效能指标「研发浓度」在项目度量中的应用</title>
            <link>https://tech.youzan.com/development-density-index/</link>
            <guid isPermaLink="false">52bdfcd3-90b0-4416-a78d-5edbfe08a0b2</guid>
            <pubDate></pubDate>
            <updated>Thu, 13 Jan 2022 12:16:28 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <blockquote>
  <p>文 | 费解 on 效能改进</p>
</blockquote>

<h1 id="1">1. 背景</h1>

<p>在研发管理领域，业界一直在试图寻找可以衡量研发交付效率的指标。常见的指标有：吞吐率（多）、研发周期（快）、资源利用率（省）。然而，在实践中，我们发现，上述三项无法直接作为指导改进的北极星指标：</p>

<p>1）吞吐率，在一段时间内交付项目的个数，是产品需求方关注的指标。若项目未交付，则不落入统计，也就无法发现问题和采取行动。而一旦交付，就错过了采取行动的时机。该指标是个滞后指标，它只关注项目的终点，犹如刻舟求剑，可参考性较差。见图1中，4月份吞吐率为0，但并不意味着生产是停滞的，5月份吞吐率为1，也不意味着持续了5个月的项目D是健康的。</p>

<p><img alt=" " src="https://tech.youzan.com/content/images/2022/01/image01.png" />
<center><span style="font-size: 10px;">图1. 多个项目上线后，被统计在不同月份的吞吐率中</span></center></p>

<p>2）研发周期，基于单个项目计划的起止时间，是由关键路径决定的，项目经理尤为关心。然而，在关键路径上的人员，除了计划内的研发工作之外，又受到项目外的精力牵扯（比如：</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>1da362b8-85fb-48ab-b6b1-bb82f9caca2d</id>
            <title>数据测试方法</title>
            <link>https://tech.youzan.com/shu-ju-ce-shi-fang-fa/</link>
            <guid isPermaLink="false">1da362b8-85fb-48ab-b6b1-bb82f9caca2d</guid>
            <pubDate></pubDate>
            <updated>Thu, 30 Dec 2021 11:53:40 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>有赞数据报表中心为商家提供了丰富的数据指标，包括30+页面，100+数据报表以及400+不同类型的数据指标，它们帮助商家更合理、科学地运营店铺，同时也直接提供分析决策方法供商家使用。并且，每天在跑的底层任务和涉及的数据表已经达到千级别。面对如此庞大的数据体系，作为测试如何制定质量保障策略呢？这篇文章将从：1、有赞数据链路 2、数据层测试 3、应用层测试 4、后续规划四个方面展开</p>

<h1 id="">一、有赞数据链路</h1>

<h2 id="1">1、数据链路介绍</h2>

<p>首先介绍有赞的数据总体架构图：</p>

<p><img alt="系统架构图" src="https://tech.youzan.com/content/images/2021/12/-------23---1--1.png" /></p>

<p>自顶向下可以大致划分为应用服务层、数据网关层、应用存储层、数据仓库，并且作业开发、元数据管理等平台为数据计算、任务调度以及数据查询提供了基础能力</p>

<p>以上对整体架构做了初步的介绍，对于质量把控来说，最核心的两个部分是：数据仓库以及数据应用部分。因为这两部分属于数据链路中的核心环节，相对于其他层级而言，日常改动也更为频繁，出现问题的风险也比较大</p>

<h1 id="">二、数据层测试</h1>

<h2 id="1">1、整体概览</h2>

<p>首先，针对数据层的质量保障，可以分成三个方面：数据及时性、</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>4506cac2-364d-46dd-afce-53016f8561b1</id>
            <title>Redis源码解析</title>
            <link>https://tech.youzan.com/redisyuan-ma-jie-xi/</link>
            <guid isPermaLink="false">4506cac2-364d-46dd-afce-53016f8561b1</guid>
            <pubDate></pubDate>
            <updated>Sun, 19 Dec 2021 08:13:00 GMT</updated>
                
                
            <media:content url="https://tech.youzan.com/content/images/2021/12/image-1431.png"/>
                
            <content:encoded>
                <![CDATA[
                    
                    
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>4c125402-c9af-4add-9d17-cb17e8a0405f</id>
            <title>Java锁与线程的那些事</title>
            <link>https://tech.youzan.com/javasuo-yu-xian-cheng-de-na-xie-shi/</link>
            <guid isPermaLink="false">4c125402-c9af-4add-9d17-cb17e8a0405f</guid>
            <pubDate></pubDate>
            <updated>Tue, 14 Dec 2021 06:33:41 GMT</updated>
                
                
            <media:content url="https://tech.youzan.com/content/images/2021/07/-----3.svg"/>
                
            <content:encoded>
                <![CDATA[
                    
                    
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>2b42954e-f4b4-407d-9b25-a75fc166b1d1</id>
            <title>有赞实时计算 Flink 1.13 升级实践</title>
            <link>https://tech.youzan.com/flink_13/</link>
            <guid isPermaLink="false">2b42954e-f4b4-407d-9b25-a75fc166b1d1</guid>
            <pubDate></pubDate>
            <updated>Fri, 03 Dec 2021 08:34:00 GMT</updated>
                
                
            <media:content url="https://tech.youzan.com/content/images/2021/12/--.jpeg"/>
                
            <content:encoded>
                <![CDATA[
                    
                    
                ]]>
            </content:encoded>
        </item>
        
    </channel>
</rss>